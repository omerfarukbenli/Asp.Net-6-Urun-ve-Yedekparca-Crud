// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rent.Data;

#nullable disable

namespace Rent.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220615235525_two")]
    partial class two
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Rent.Entites.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "arabalar"
                        },
                        new
                        {
                            Id = 2,
                            Name = "arabalar"
                        },
                        new
                        {
                            Id = 3,
                            Name = "arabalar"
                        },
                        new
                        {
                            Id = 4,
                            Name = "arabalar"
                        },
                        new
                        {
                            Id = 5,
                            Name = "arabalar"
                        });
                });

            modelBuilder.Entity("Rent.Entites.Models.CategorySparepart", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("SparepartId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "SparepartId");

                    b.HasIndex("SparepartId");

                    b.ToTable("CategorySpareparts");
                });

            modelBuilder.Entity("Rent.Entites.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Rent.Entites.Models.Sparepart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Spareparts");
                });

            modelBuilder.Entity("Rent.Entites.Models.CategorySparepart", b =>
                {
                    b.HasOne("Rent.Entites.Models.Category", "Category")
                        .WithMany("CategorySpareparts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rent.Entites.Models.Sparepart", "Sparepart")
                        .WithMany("CategorySpareparts")
                        .HasForeignKey("SparepartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Sparepart");
                });

            modelBuilder.Entity("Rent.Entites.Models.Product", b =>
                {
                    b.HasOne("Rent.Entites.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Rent.Entites.Models.Category", b =>
                {
                    b.Navigation("CategorySpareparts");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Rent.Entites.Models.Sparepart", b =>
                {
                    b.Navigation("CategorySpareparts");
                });
#pragma warning restore 612, 618
        }
    }
}
